#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define SIZE 10
void populaMatriz(int *matriz, int size) {
	int i, j, lin = size, mid = size / 2;
	for (i = 0; i<mid; i++)
		for (j = 0; j< size; j++) {
			if (i < mid && j  < mid)
				matriz[i*lin + j] = 1;
			else	
				matriz[i*lin + j] = 2;
		}
	for (i = mid; i < size; i++)
		for (j = 0; j < size; j++) {
			if (i <= size && j  < mid)
				matriz[i*lin + j] = -1;
			else	
				matriz[i*lin + j] = -2;
		}
}

void printMat(int *mat, int col, int lin) {
	int i, j;
	for (i = 0; i < lin; i++) {
		for (j = 0; j < col; j++) {
			printf(" %d", *(mat + (i*col + j)));
		}
	}
}

int rand_int(int max) {
	int n = max;
	int limit = RAND_MAX - RAND_MAX % n;
	int rnd;

	do {
		rnd = rand();
	} while (rnd >= limit);
	return rnd % n;
}

void embaralhaVetor(int *array, size_t n)
{
	if (n > 1) {
		size_t i;
		for (i = 0; i < n - 1; i++) {
			size_t j = i + rand() / (RAND_MAX / (n - i) + 1);
			int t = array[j];
			array[j] = array[i];
			array[i] = t;
		}
	}
}
void printArray(int *pt, int size) {
	int i, u;
	for (i = 0; i < size; i++) {
		u = pt[i];
		printf("%d\t", u);
	}
}
static int getArea(int *matriz, size_t size, int *val) {
	int i, j;
	for (i = 0; i < size; i++) {
		for (j = 0; j < size; j++) {
			if (i < size / 2) {
				if (&matriz[i*size + j] < val && val < &matriz[size]) {
					return 1;
				}
				else {
					return 2;
				}
			}
			else {
				if (&matriz[i*size + j] < val && val < &matriz[i*size + j]) {
					return -1;
				}
				else {
					return -2;
				}
			}
		}
	}
}

void moveEsquerda(int *matriz, int size) {
	int i, j, k, nilPos;
	//Encontra a posicao do 0
	for(i = 0; i < size; i++){
		for(j = 0; j < size; j++){
			k = matriz[i*size + j];
			if(k = 0)
				nilPos = i*size + j;
		}
	}
	//Troca os valores para mover o 0 para a esquerda, se ja nao esta no limite
	for(i = 0; i < size; i++){
		if(matriz[nilPos] == matriz[i*size + 10]);
			return;
	int temp = matriz[nilPos];
	matriz[nilPos] = matriz[nilPos + 1];
	matriz[nilPos + 1] = matriz[nilPos];	
	
	}
}
void moveDireita(int *matriz) {
	
}
void moveBaixo(int *matriz) {

}
void moveCima(int *matriz) {

}

int main() {
	int plano[SIZE][SIZE], *zero;
	char move;
	populaMatriz(&plano[0][0], SIZE);
	printMat(&plano[0][0], SIZE, SIZE);
	embaralhaVetor(&plano[0][0], (SIZE * SIZE));
	printf("\n\n");
	zero = &(plano[0][0]);
	*zero = 0;
	printMat(&plano[0][0], SIZE, SIZE);
	while (1) {
		//scanf(" %c", &move);
		fflush(stdin);
		scanf(" %c ", &move);
		printf(" %c \n", &move);
		switch (move) {
			case 'd':
				moveEsquerda(&plano[0][0], SIZE);
				break;
			case 'w':
				moveCima(&plano[0][0]);
				break;
			case 'a':
				moveDireita(&plano[0][0]);
				break;
			case 's':
				moveBaixo(&plano[0][0]);
				break;
		}
		
	/**	if (getch() == '\033') { // if the first value is esc
   		 getch(); // skip the [
   		 switch(getch()) { // the real value
	        case 'A':
	            // code for arrow up
	            break;
	        case 'B':
	            // code for arrow down
	            break;
	        case 'C':
	            // code for arrow right
	            break;
	        case 'D':
	            // code for arrow left
	            break;
    }*/

		
		printArray(&plano[0][0], SIZE * SIZE);
	}
	system("pause");
	return 0;
}
